# Application Configuration
spring.application.name=payment-service
server.port=8084

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/payment_service_db
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

# PayOS Configuration
payos.client-id=${PAYOS_CLIENT_ID:your-client-id}
payos.api-key=${PAYOS_API_KEY:your-api-key}
payos.checksum-key=${PAYOS_CHECKSUM_KEY:your-checksum-key}
payos.return-url=http://localhost:8084/payment/return
payos.cancel-url=http://localhost:8084/payment/cancel

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=payment-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.payment_service.event

# API Documentation
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Logging
logging.level.com.example.payment_service=DEBUG
logging.level.vn.payos=DEBUG
